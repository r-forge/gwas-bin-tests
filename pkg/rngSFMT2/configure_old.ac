# Process this file with autoconf to produce a configure script.
AC_INIT(rngSFMT2, 0.1, karl.forner@gmail.com)

# taken from http://stackoverflow.com/questions/8732283/how-do-i-combine-ac-subst-and-ac-define
# AC_DEFINE_SUBST(NAME, VALUE, DESCRIPTION)
# -----------------------------------------
AC_DEFUN([AC_DEFINE_SUBST], [
AC_DEFINE([$1], [$2], [$3])
AC_SUBST([$1], ['$2'])
])

# added by Karl: AC_OPENMP only added in 2.62
AC_PREREQ([2.62])

# safety check, probably useless that it is the right src directory
AC_CONFIG_SRCDIR([src/interface.cpp])

AC_CONFIG_HEADER(src/config.h)

# Checks for programs.
AC_PROG_CC
AC_PROG_CXX


AC_CHECK_HEADER([inttypes.h],
                 [AC_DEFINE_SUBST([HAVE_INTTYPES_H], 1,
                    [Define to 1 if you have <inttypes.h>.])],
                 [AC_MSG_ERROR([Error, SFMT requires inttypes.h])])

AC_CHECK_HEADER([emmintrin.h],
                 [AC_DEFINE_SUBST([HAVE_EMMINTRIN_H], 1,
                    [Define to 1 if you have <emmintrin.h>.])])
                 ])

 AC_CHECK_HEADER([altivec.h],
    [AC_DEFINE_SUBST([HAVE_ALTIVEC_H], 1,
        [Define to 1 if you have <altivec.h>.])])
 ])

# check endianness define BIG_ENDIAN if big endian
AC_C_BIGENDIAN( [AC_DEFINE_SUBST([BIG_ENDIAN], 1,
                        [Define IF IT IS bIG ENDIAN])]
                        )

# additional macros


m4_include([m4/m4_ax_check_compile_flag.m4])
m4_include([m4/m4_ax_gcc_x86_cpuid.m4])
m4_include([m4/ax_ext2.m4])

# to detect SIMD extensions:
AX_EXT2


#if test "$ax_cv_have_sse2_ext" = "yes"; then
#    AC_DEFINE_SUBST([SFMT_SSE2],[1])
#fi

#if test "$ax_cv_have_avx_ext" = "yes"; then
#    echo yes
#    AC_DEFINE_SUBST([SFMT_ALTIVEC],[1])
â™¯fi


AC_CONFIG_FILES([src/Makevars])

AC_OUTPUT
